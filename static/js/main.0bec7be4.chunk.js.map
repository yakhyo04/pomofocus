{"version":3,"sources":["todolist/addTask/styles.module.css","Header/styles.module.css","todolist/GTodo/todoform.module.css","todolist/styles.module.css","todolist/GTodo/todo.module.css","Counter/Counter.js","Header/Header.js","todolist/GTodo/TodoForm.js","todolist/GTodo/Todo.js","todolist/GTodo/TodoList.js","todolist/addTask/Count.js","todolist/Todolist.js","Backgrounds/Bg.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Counter","props","renderer","formatted","minutes","seconds","completed","Completionist","clockRef","useRef","handlePause","current","pause","bgColor","setBgColor","useState","start","setStart","autoStart","ref","date","Date","now","min","setMin","changed1","changed2","changed3","show","setShow","handleClose","handleShow","className","onClick","Modal","onHide","animation","Body","Footer","Button","variant","Header","styles","header","logo","nav","list","TodoForm","edit","value","input","setInput","inputRef","useEffect","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","todoform","sectionTodoList","placeholder","onChange","name","inputTodo","btnSave","h6","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","todoStyles","output","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","Count","selectedAddTask","setSelectedAddTask","handelOnClick","count","setCount","type","valueInput","inputNum","btnIncrement","parseInt","btnDecrement","btnCancel","btn","iconPlus","Todolist","sectionTime","tasks","dots","Bg","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bec7be4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__ToWS-\",\"sectionTodoList\":\"styles_sectionTodoList__1dna_\",\"h6\":\"styles_h6__8sG5t\",\"dots\":\"styles_dots__2I98t\",\"inputNum\":\"styles_inputNum__1O7vD\",\"btnIncrement\":\"styles_btnIncrement__22IhM\",\"btnDecrement\":\"styles_btnDecrement__6BBAP\",\"btnCancel\":\"styles_btnCancel__KkrgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1HeRM\",\"nav\":\"styles_nav__Y8QK2\",\"logo\":\"styles_logo__BG2QH\",\"list\":\"styles_list__13o05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTodo\":\"todoform_inputTodo__qXIZj\",\"btnSave\":\"todoform_btnSave__1cSEb\",\"h6\":\"todoform_h6__dBolR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTime\":\"styles_sectionTime__4CIK3\",\"tasks\":\"styles_tasks__39HME\",\"dots\":\"styles_dots__2UfKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"output\":\"todo_output__1fOxB\"};","import React, { useState, useRef } from \"react\";\nimport Countdown from \"react-countdown\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nimport \"./styles.css\";\nconst Counter = (props) => {\n  //   countdown timer\n  const renderer = ({ formatted: { minutes, seconds, completed } }) => {\n    if (completed) {\n      // Render a completed state\n      return <Completionist />;\n    } else {\n      // Render a countdown\n      return (\n        <span>\n          {minutes}:{seconds}\n        </span>\n      );\n    }\n  };\n  const Completionist = () => <span>You are good!</span>;\n\n  // play and pause from button\n  const clockRef = useRef();\n  const handleStart = () => clockRef.current.start();\n  const handlePause = () => clockRef.current.pause();\n\n  // useState for background color of lists\n  const { bgColor, setBgColor } = props;\n  // play and pause\n  const [start, setStart] = useState(true);\n  const pause = () => {\n    setStart(!start);\n  };\n\n  //  useState for numbers \"  min \"\n  const [min, setMin] = useState(\n    <Countdown\n      autoStart={false}\n      ref={clockRef}\n      date={Date.now() + 1500000}\n      renderer={renderer}\n    />\n  );\n  const changed1 = () => {\n    setBgColor(1);\n    handlePause();\n    setStart(true); // display button start\n    setMin(\n      <Countdown\n        ref={clockRef}\n        date={Date.now() + 1500000}\n        renderer={renderer}\n      />\n    );\n  };\n\n  const changed2 = () => {\n    setBgColor(2);\n    handlePause();\n    setStart(true); // display button start\n    setMin(\n      <Countdown\n        ref={clockRef}\n        date={Date.now() + 300000}\n        renderer={renderer}\n      />\n    );\n  };\n  const changed3 = () => {\n    setBgColor(3);\n    handlePause();\n    setStart(true); // display button start\n    setMin(\n      <Countdown\n        ref={clockRef}\n        date={Date.now() + 900000}\n        renderer={renderer}\n      />\n    );\n  };\n  // color btn\n  // const [colorBtn, setColorBtn] = useState(\"btnColor\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div>\n      <section className=\"counterSection\">\n        <div className=\"headCounter\">\n          {/************************* lists ****************************/}\n          <ul className=\"breakList\">\n            <li\n              className={\n                \"list\" + (bgColor === 1 ? \"list listSelected btnColor\" : \"\")\n              }\n              onClick={() => {\n                if (start === false) {\n                  handleShow();\n                } else {\n                  changed1();\n                }\n              }}\n            >\n              pomo\n            </li>\n            <li\n              className={\"list\" + (bgColor === 2 ? \"list listSelected\" : \"\")}\n              onClick={() => {\n                if (start === false) {\n                  handleShow();\n                } else {\n                  changed2();\n                }\n              }}\n            >\n              Short break\n            </li>\n            <li\n              className={\"list\" + (bgColor === 3 ? \"list listSelected\" : \"\")}\n              onClick={() => {\n                if (start === false) {\n                  handleShow();\n                } else {\n                  changed3();\n                }\n              }}\n            >\n              long break\n            </li>\n          </ul>\n          <div>\n            {/************************* main number of minutes ****************************/}\n            <h2 className=\"titleMin\">{min}</h2>\n\n            <Modal show={show} onHide={handleClose} animation={false}>\n              <Modal.Body>\n                The timer is still running, are you sure you want to switch?\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => {\n                    handleClose();\n                    if (bgColor === 1) {\n                      changed1();\n                    } else if (bgColor === 2) {\n                      changed2();\n                    } else {\n                      changed3();\n                    }\n                  }}\n                >\n                  OK\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            {/************************* button start and pause ****************************/}\n            <div className=\"btn\">\n              {start ? (\n                <div\n                  className={\n                    \"btnStart\" +\n                    \" \" +\n                    (bgColor === 1\n                      ? \"btnColor1\"\n                      : bgColor === 2\n                      ? \"btnColor2\"\n                      : bgColor === 3\n                      ? \"btnColor3\"\n                      : \"\")\n                  }\n                  onClick={() => {\n                    pause();\n                    handleStart();\n                  }}\n                >\n                  Start\n                </div>\n              ) : (\n                <div\n                  className={\n                    \"btnPause\" +\n                    \" \" +\n                    (bgColor === 1\n                      ? \"btnColor1\"\n                      : bgColor === 2\n                      ? \"btnColor2\"\n                      : bgColor === 3\n                      ? \"btnColor3\"\n                      : \"\")\n                  }\n                  onClick={() => {\n                    pause();\n                    handlePause();\n                  }}\n                >\n                  Pause\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport { FaCheckCircle, FaUserAlt } from \"react-icons/fa\";\nimport { HiOutlineDocumentReport } from \"react-icons/hi\";\nimport { FiSettings } from \"react-icons/fi\";\n\nfunction Header() {\n  return (\n    <div>\n      <header className={styles.header}>\n        <h5 className={styles.logo}>\n          <FaCheckCircle /> Pomofocus\n        </h5>\n        <ul className={styles.nav}>\n          <li className={styles.list}>\n            <HiOutlineDocumentReport /> reports\n          </li>\n          <li className={styles.list}>\n            <FiSettings /> settings\n          </li>\n          <li className={styles.list}>\n            <FaUserAlt /> login\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport todoform from \"./todoform.module.css\";\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={todoform.sectionTodoList}>\n      {props.edit ? (\n        <>\n          <input\n            placeholder=\"Update your item\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            ref={inputRef}\n            className={todoform.inputTodo}\n          />\n          <button onClick={handleSubmit} className={todoform.btnSave}>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder=\"What are you working on ?\"\n            value={input}\n            onChange={handleChange}\n            name=\"text\"\n            className={todoform.inputTodo}\n            ref={inputRef}\n          />\n          <br />\n          <h6 className={todoform.h6}>Est Pomodoros</h6>\n          <button onClick={handleSubmit} className={todoform.btnSave}>\n            Save\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\nimport todoStyles from \"./todo.module.css\";\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = (value) => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? todoStyles.output : todoStyles.output}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div>\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} />\n        <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) =>\n      prev.map((item) => (item.id === todoId ? newValue : item))\n    );\n  };\n\n  const removeTodo = (id) => {\n    const removedArr = [...todos].filter((todo) => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { BsPlusCircleFill } from \"react-icons/bs\";\nimport { RiArrowUpSFill, RiArrowDownSFill } from \"react-icons/ri\";\nimport TodoList from \"../GTodo/TodoList\";\n\nfunction Count() {\n  /************* hide att task button *************/\n  const [selectedAddTask, setSelectedAddTask] = useState(false);\n  const handelOnClick = () => {\n    setSelectedAddTask(!selectedAddTask);\n  };\n  /************* count useState increment and decrement from buttons *************/\n  const [count, setCount] = useState(1);\n\n  const increment = () => {\n    setCount(parseInt(count) + 1);\n  };\n\n  const decrement = () => {\n    /*only positive numbers*/\n    if (count > 0) setCount(parseInt(count) - 1);\n  };\n  /************************************************************************************* */\n\n  return (\n    <div>\n      {/* Output for Todolist */}\n      {selectedAddTask ? (\n        <section className={styles.sectionTodoList}>\n          {/* input for numbers */}\n          <input\n            type=\"number\"\n            name=\"clicks\"\n            value={count}\n            min=\"0\"\n            onChange={(e) => {\n              setCount(e.target.valueInput);\n            }}\n            className={styles.inputNum}\n          />\n          {/*  increment and decrement from buttons */}\n          <button className={styles.btnIncrement} onClick={increment}>\n            <RiArrowUpSFill />\n          </button>\n          <button className={styles.btnDecrement} onClick={decrement}>\n            <RiArrowDownSFill />\n          </button>\n          <br />\n          <TodoList />\n          <button className={styles.btnCancel} onClick={handelOnClick}>\n            Cancel\n          </button>\n        </section>\n      ) : (\n        <div>\n          <button onClick={handelOnClick} className={styles.btn}>\n            <BsPlusCircleFill className={styles.iconPlus} />\n            add task\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Count;\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport Count from \"./addTask/Count\";\nfunction Todolist() {\n  return (\n    <section className={styles.sectionTime}>\n      <p>Time to work!</p>\n      <ul className={styles.tasks}>\n        <li>Tasks</li>\n        <li className={styles.dots}>\n          <BsThreeDotsVertical />\n        </li>\n      </ul>\n      <Count />\n    </section>\n  );\n}\n\nexport default Todolist;\n","import React from \"react\";\nimport Counter from \"../Counter/Counter\";\nimport Header from \"../Header/Header\";\nimport Todolist from \"../todolist/Todolist\";\n\n// import styles from \"./styles.module.css\";\nfunction Bg() {\n  const [bgColor, setBgColor] = React.useState(1);\n  return (\n    <div>\n      <section\n        className={\n          bgColor === 1\n            ? \"bg1\"\n            : bgColor === 2\n            ? \"bg2\"\n            : bgColor === 3\n            ? \"bg3\"\n            : \"\"\n        }\n      >\n        <Header />\n        <Counter bgColor={bgColor} setBgColor={setBgColor} />\n        <Todolist />\n      </section>\n    </div>\n  );\n}\n\nexport default Bg;\n","import \"./App.css\";\nimport Bg from \"./Backgrounds/Bg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Bg />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}